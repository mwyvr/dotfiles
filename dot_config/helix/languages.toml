[[languages]]
# https://github.com/helix-editor/helix/wiki/Language-Server-Configurations
# https://github.com/helix-editor/helix/wiki/External-formatter-configuration

# TODO Word completion and snippets:
# https://github.com/estin/simple-completion-language-server

# https://github.com/estin/simple-completion-language-server
[language-server.scls]
command = "simple-completion-language-server"

# [language-server.scls.config]
# max_completion_items = 20            # set max completion results len for each group: words, snippets, unicode-input
# snippets_first = true                # completions will return before snippets by default
# snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
# feature_words = true                 # enable completion by word
# feature_snippets = true              # enable snippets
# feature_unicode_input = true         # enable "unicode input"
# feature_paths = true                 # enable path completion
# feature_citations = false            # enable citation completion (only on `citation` feature enabled)

# shells
[[language]]
name = "fish"
formatter = { command = "fish_indent" }
auto-format = true

[[language]]
name = "bash"
indent = { tab-width = 4, unit = "    " }
formatter = { command = 'shfmt', args = ["-i", "4"] }
auto-format = true

# text documents
[[language]]
name = "markdown"
auto-format = true
formatter = { command = "prettier", args = ["--parser", "markdown"] }
language-servers = ["scls", "harper-ls"]

# spelling and grammar
[language-server.harper-ls]
command = "harper-ls"
args = ["--stdio"]

# configuration or data markup languages
[[language]]
name = "toml"
formatter = { command = "taplo", args = ["format", "-"] }
auto-format = true

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json" = "roles/{tasks,handlers}/*.{yml,yaml}"

# programming languages
[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }
language-servers = ["gopls", "golangci-lint-langserver"]

[[language]]
name = "python"
language-servers = ["ruff-lsp"]
# In case you'd like to use ruff alongside black for code formatting:
auto-format = true
formatter = { command = "black", args = ["--quiet", "-"] }

# hypertext and related
[[language]]
name = "html"
indent.tab-width = 2
indent.unit = " "
language-servers = ["vscode-html-language-server", "emmet-ls"]
formatter = { command = 'prettier', args = [
  "--parser",
  "html",
  "--tab-width",
  "2",
] }
auto-format = true

[[language]]
name = "javascript"
indent.tab-width = 4
indent.unit = " "
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = [
  "--parser",
  "javascript",
  "--tab-width",
  "4",
] }
auto-format = true

[[language]]
name = "typescript"
indent.tab-width = 4
indent.unit = " "
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = [
  "--parser",
  "typescript",
  "--tab-width",
  "4",
] }
auto-format = true

[[language]]
name = "css"
language-servers = ["vscode-css-language-server"]
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[[language]]
name = "json"
language-servers = ["vscode-json-language-server"]
formatter = { command = 'prettier', args = ["--parser", "json"] }
auto-format = true

[language-server.ruff-lsp]
command = "ruff-lsp"
