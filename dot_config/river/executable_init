#!/bin/sh
# check out https://leon_plickat.srht.site/writing/river-setup-guide/article.html/

# display configuration daemon
pkill kanshi
# see end for daemon launch

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

## TODO use chezmoi  templates for changing certain spawned apps (mixer vs pamixer, etc)
#

# summer 2024 added tearing support:
# riverctl rule-add tearing

# touchpad
riverctl input pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad tap enabled
riverctl input pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad tap-button-map left-middle-right
riverctl input pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad pointer-accel 0.25
riverctl input pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad accel-profile flat
riverctl input pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad disable-while-typing enabled
riverctl input pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad natural-scroll enabled


# Alt+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Alt+Shift Return spawn foot
riverctl map normal Super+Shift R spawn 'foot sh -c "hx ~/.config/river/init"'
riverctl map normal Super+Shift T spawn 'foot sh -c "hx ~/.config/waybar/*"'
# reload config
riverctl map normal Super+Shift X spawn 'sh -c "~/.config/river/init"'

# tmux sessions in various places
riverctl map normal Super+Shift C spawn "foot ssh -t mw@wabbit tmux new -A -s chimera" # IRC
riverctl map normal Super+Shift W spawn "foot ssh -t mw@wabbit tmux new -A -s wabbit"
riverctl map normal Super+Shift B spawn "foot ssh -t mw@bugs tmux new -A -s bugs"
riverctl map normal Super+Shift E spawn "foot ssh -t mw@elron tmux new -A -s elron"
riverctl map normal Super+Shift P spawn "foot ssh -t mw@pi tmux new -A -s pi"

# Super+P launch program menu
riverctl map normal Alt P spawn fuzzel
# Super+D for launch pad
# riverctl declare-mode launcher
# riverctl map normal Super D enter-mode launcher
# riverctl map launcher None c spawn chrome
# riverctl map launcher None m spawn thunderbird
# riverctl map launcher None Escape enter-mode normal

# Alt+Shift+C to close the focussed view (kill client)
riverctl map normal Alt+Shift C close

# Alt+Shift+Q to exit river
riverctl map normal Alt+Shift Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Alt J focus-view next
riverctl map normal Alt K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Alt+Shift J swap next
riverctl map normal Alt+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Alt Period focus-output next
riverctl map normal Alt Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Alt+Shift Period send-to-output next
riverctl map normal Alt+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Alt Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Alt H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Alt L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
# dwm: inc / dec master
riverctl map normal Alt I send-layout-cmd rivertile "main-count +1"
riverctl map normal Alt D send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9); do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Alt $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Alt+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Alt 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Alt Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Alt F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume spawn 'mixer vol=+5%'
    riverctl map $mode None XF86AudioLowerVolume spawn 'mixer vol=-5%'
    riverctl map $mode None XF86AudioMute spawn 'mixer vol.mute=toggle'

    # # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    # riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    # riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    # riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    # riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    # riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    # riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x111318 #  surface-dim
# riverctl border-color-focused 0x5b5e66 # outline-dimmer
# riverctl border-color-focused 0x7d9a79   # green
# riverctl border-color-focused 0x7491c7 # blue
riverctl border-color-focused 0x284777 # primary-container
# riverctl border-color-focused 0x415f91 # inverse-primary
# # riverctl border-color-focused 0xa3903f   # yellow
riverctl border-color-unfocused 0x44474e # outline-variant
# riverctl border-color-unfocused 0x415f91 # inverse-primary
riverctl border-width 2

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 2 -outer-padding 2 &

riverctl focus-follows-cursor always

dbus-update-activation-environment \
    SEATD_SOCK \
    WAYLAND_DISPLAY \
    XDG_CURRENT_DESKTOP=river

# https://github.com/Tottitov/dotfiles/blob/master/.config/river/init
# add daemons here
daemons="kanshi waybar swaybg swayidle lxqt-policykit-agent"

# Start helper daemons that need starting; otherwise continue in case init is re-loaded.
for d in $daemons; do
    pgrep -q "$d" && continue
    case $d in
    swaybg) $d -i ~/.config/wallpaper/freebsd-ascii.png & ;;
    *) $d & ;;
    esac
done >/dev/null 2>&1
