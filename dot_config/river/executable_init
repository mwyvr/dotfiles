#!/bin/sh
. /etc/os-release
OS=$(uname)

# run mappings first in case errors in script later cause it to terminate or stall
sh $HOME/.config/river/mappings

# LAYOUT
view_padding=4
outer_padding=4
riverctl default-layout rivertile
rivertile -view-padding $view_padding -outer-padding $outer_padding &

# sockets
WOBSOCK=$XDG_RUNTIME_DIR/wob.sock

case $OS in
Linux)
    daemons="kanshi swaybg swaync waybar swayidle wob"
    swaybg_opts="-c 111318 -i $HOME/.config/wallpaper/opensuse-black.jpeg"
    touchpad="pointer-1160-4122-DELL0A36:00_0488:101A_Touchpad"
    if [ "$ID" = "elron" ]; then
        # desktop feeds a DAC
        pamixer --set-volume 100 # desktop feeds a DAC
    else
        pamixer --set-volume 60 # of 100
        brillo -S 20            # display brightness
    fi
    # media key binds
    for mode in normal locked; do
        riverctl map $mode None XF86AudioRaiseVolume spawn "pamixer -i 5 && pamixer --get-volume > $WOBSOCK"
        riverctl map $mode None XF86AudioLowerVolume spawn "pamixer -d 5 && pamixer --get-volume > $WOBSOCK"
        riverctl map $mode None XF86AudioMute spawn 'pamixer -t'
        riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
        riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
        riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
        riverctl map $mode None XF86AudioNext spawn 'playerctl next'
        riverctl map $mode None XF86MonBrightnessUp spawn "brillo -A 5 && brillo -G | cut -f1 -d '.'  > $WOBSOCK"
        riverctl map $mode None XF86MonBrightnessDown spawn "brillo -U 5 && brillo -G | cut -f1 -d '.'  > $WOBSOCK"
    done
    ;;
FreeBSD)
    daemons="kanshi pipewire swaybg swaync waybar swayidle"
    swaybg_opts="-c 111318 -i $HOME/.config/wallpaper/freebsd-ascii.png"
    touchpad="pointer-1160-4122-DELL0A36:00_0488:101A_TouchPad" # capitalization in TouchPad matters
    mixer vol.mute=off
    if [ "$ID" = "elron" ]; then
        # desktop feeds a DAC
        mixer vol=100%
    else
        mixer vol=60%
        for mode in normal locked; do
            riverctl map $mode None XF86AudioRaiseVolume spawn 'mixer vol=+5%'
            riverctl map $mode None XF86AudioLowerVolume spawn 'mixer vol=-5%'
            riverctl map $mode None XF86AudioMute spawn 'mixer vol.mute=toggle'
        done
    fi
    ;;
esac

riverctl input "$touchpad" tap enabled
riverctl input "$touchpad" tap-button-map left-right-middle
riverctl input "$touchpad" pointer-accel 0.40
riverctl input "$touchpad" accel-profile adaptive
riverctl input "$touchpad" disable-while-typing enabled
riverctl input "$touchpad" scroll-method two-finger
riverctl input "$touchpad" natural-scroll enabled

# GENERAL SETTINGS
riverctl focus-follows-cursor normal # none, normal, always - always is too prone to fire esp on laptop/touchpad
riverctl set-repeat 50 300           # Set keyboard repeat rate

# COLOURS
riverctl background-color 0x111318       #  surface-dim
riverctl border-color-focused 0x284777   # primary-container
riverctl border-color-unfocused 0x44474e # outline-variant
riverctl border-width 2                  # just a hint

# RULES
riverctl rule-add -title 'Compose Message' float
riverctl rule-add -app-id 'org.gnome.Evolution' -title 'Compose Message' float
riverctl rule-add -app-id 'org.gnome.Evolution' -title 'Re*' float
riverctl rule-add -app-id 'org.gnome.Evolution' -title 'Fwd*' float
riverctl rule-add -app-id 'org.gnome.Evolution-alarm-notify' float
riverctl rule-add -app-id 'org.gnome.Nautilus' float
riverctl rule-add -app-id 'org.gnome.Weather' float
riverctl rule-add -app-id 'org.pulseaudio.pavucontrol' float
riverctl rule-add -title 'Picture-in-picture' float

# gtk/gui prefs
gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'
gsettings set org.gnome.desktop.interface cursor-theme 'Adwaita'
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'

# daemons
# only for configs while in dev
# restart="waybar swaybg wob"
restart="wob"
for d in $restart; do
    case $d in
    waybar)
        # swaync-client will be relaunched by waybar's config
        pkill swaync-client
        ;;
    wob)
        pkill -f "tail.*wob"
        ;;
    *)
        pkill "$d"
        ;;
    esac
done

# start daemons not already running; waybar components need pipewire running
for d in $daemons; do
    if ! pgrep "$d" >/dev/null 2>&1; then
        case $d in
        swaybg)
            $d $swaybg_opts &
            ;;
        wob)
            [ -e "$WOBSOCK" ] || mkfifo "$WOBSOCK"
            pkill -f "tail.*wob"
            tail --follow=name -s 0 "$WOBSOCK" | wob &
            ;;
        *)
            $d &
            ;;
        esac
    fi
done
